{"version":3,"sources":["Components/Button.jsx","Components/Input.jsx","Components/clearb.jsx","App.jsx","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","App","addToInput","setState","state","handleEqual","math","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uUAOaA,G,YAAS,SAACC,GAAD,OACpB,yBACEC,UAAS,0BANOC,EAOHF,EAAMG,SANbC,MAAMF,IAAgB,MAARA,GAAuB,MAARA,EAMG,WAAP,OAE/BG,QAAS,kBAAML,EAAMM,YAAYN,EAAMG,YAEtCH,EAAMG,UAXQ,IAACD,ICAPK,G,MAAQ,SAACP,GAAD,OAAW,yBAAKC,UAAU,SAASD,EAAMQ,SCAjDC,G,MAAc,SAACT,GAAD,OACzB,yBAAKC,UAAU,YAAYI,QAASL,EAAMU,aACvCV,EAAMG,Y,QCyDIQ,E,kDAtDb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAMRY,WAAa,SAACV,GACZ,EAAKW,SAAS,CAAEL,MAAO,EAAKM,MAAMN,MAAQN,KARzB,EAWnBa,YAAc,WACZ,EAAKF,SAAS,CAAEL,MAAOQ,IAAc,EAAKF,MAAMN,UAVhD,EAAKM,MAAQ,CACXN,MAAO,IAHQ,E,qDAeT,IAAD,OACP,OACE,yBAAKP,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAOO,MAAOS,KAAKH,MAAMN,QACzB,yBAAKP,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,MAEF,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,MAEF,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,MAEF,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAaW,KAAKL,YAA1B,KACA,kBAAC,EAAD,CAAQN,YAAa,kBAAM,EAAKS,gBAAhC,KACA,kBAAC,EAAD,CAAQT,YAAaW,KAAKL,YAA1B,MAEF,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAaS,YAAa,kBAAM,EAAKG,SAAS,CAAEL,MAAO,OAAvD,gB,GA9CMU,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ddc9abc8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst isOperator = (val) => {\r\n  return !isNaN(val) || val === \".\" || val === \"=\";\r\n};\r\n\r\nexport const Button = (props) => (\r\n  <div\r\n    className={`button-wrapper ${\r\n      isOperator(props.children) ? null : \"operator\"\r\n    }`}\r\n    onClick={() => props.handleClick(props.children)}\r\n  >\r\n    {props.children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nexport const Input = (props) => <div className=\"input\">{props.input}</div>;\r\n","import React from \"react\";\r\nimport \"./clearb.css\";\r\n\r\nexport const ClearButton = (props) => (\r\n  <div className=\"clear-btn\" onClick={props.handleClear}>\r\n    {props.children}\r\n  </div>\r\n);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Button } from \"./Components/Button\";\nimport { Input } from \"./Components/Input\";\nimport { ClearButton } from \"./Components/clearb\";\nimport * as math from \"mathjs\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n    };\n  }\n\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n  };\n\n  handleEqual = () => {\n    this.setState({ input: math.evaluate(this.state.input) });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"calc-wrapper\">\n          <Input input={this.state.input}></Input>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.addToInput}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.addToInput}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.addToInput}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>.</Button>\n            <Button handleClick={this.addToInput}>0</Button>\n            <Button handleClick={() => this.handleEqual()}>=</Button>\n            <Button handleClick={this.addToInput}>-</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={() => this.setState({ input: \"\" })}>\n              Clear\n            </ClearButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}